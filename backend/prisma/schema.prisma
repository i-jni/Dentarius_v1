// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Level {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[] // Relation avec la table Course
}

model Country {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  students  Student[] // Relation avec la table Student
}

model Student {
  id          Int      @id @default(autoincrement())
  firstName   String   @db.VarChar(255)
  lastName    String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255) // Pour l'authentification
  countryId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  country     Country  @relation(fields: [countryId], references: [id]) // Relation avec la table Country
}

model Topic {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   CourseTopic[] // Relation avec la table de jointure CourseTopic
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String?  @db.Text // Description optionnelle
  levelId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  level       Level    @relation(fields: [levelId], references: [id]) // Relation avec la table Level
  topics      CourseTopic[] // Relation avec la table de jointure CourseTopic
}

model CourseTopic {
  courseId  Int
  topicId   Int
  assignedAt DateTime @default(now())

  course    Course @relation(fields: [courseId], references: [id])
  topic     Topic  @relation(fields: [topicId], references: [id])

  @@id([courseId, topicId]) // Cl√© primaire composite
}