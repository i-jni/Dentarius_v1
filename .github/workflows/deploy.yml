name: 🚀 Deploy Dentarius to Production
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: 📦 Install Backend Dependencies
      run: |
        cd backend
        npm ci
        
    - name: 🧪 Run Unit Tests
      run: |
        cd backend
        npm run test:unit
        
    - name: 🔒 Run Security Tests
      run: |
        cd backend
        npm run test:security
        
    - name: 🔗 Run Integration Tests
      run: |
        cd backend
        npm run test:integration
        
    - name: 📊 Generate Coverage Report
      run: |
        cd backend
        npm run test:coverage

  deploy:
    name: 🔥 Deploy to Server
    runs-on: ubuntu-latest
    needs: test  # ✅ Attendre que les tests passent..
    steps:
    - name: 🚀 Deploy to Production Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "🔄 Starting deployment..."
          # Navigate to project
          cd /var/www/Dentarius_v1
          
          # Get current commit hash
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "📍 Current commit: $CURRENT_COMMIT"
          
          # Force reset to match GitHub
          echo "🔄 Resetting to latest GitHub version..."
          git fetch origin
          git reset --hard origin/main
          
          # Get new commit hash
          NEW_COMMIT=$(git rev-parse HEAD)
          echo "📍 New commit: $NEW_COMMIT"
          
          # Check if backend changed
          BACKEND_CHANGED=$(git diff --name-only $CURRENT_COMMIT $NEW_COMMIT | grep -E '^backend/' || echo "")
          
          if [ -n "$BACKEND_CHANGED" ]; then
            echo "🔧 Backend files changed - Updating backend..."
            cd backend
            export $(cat .env.production | xargs)
            
            # ✅ Tests sur le serveur (optionnel)
            echo "🧪 Running quick tests on server..."
            npm install --include=dev
            npm run test:unit || echo "⚠️ Unit tests failed but continuing..."
            
            # Installation production
            npm install --omit=dev
            pm2 restart dentarius-backend
            cd ..
          else
            echo "⏭️ Backend unchanged - Skipping backend deployment"
          fi
          
          # Check if frontend changed
          FRONTEND_CHANGED=$(git diff --name-only $CURRENT_COMMIT $NEW_COMMIT | grep -E '^frontend/' || echo "")
          
          if [ -n "$FRONTEND_CHANGED" ]; then
            echo "🎨 Frontend files changed - Building frontend..."
            cd frontend
            # Clean install
            echo "🧹 Cleaning..."
            rm -rf node_modules package-lock.json
            echo "📦 Installing ALL dependencies (including dev)..."
            NODE_ENV=development npm install
            echo "🔍 Verifying Vite installation..."
            npm list vite
            ls -la node_modules/.bin/vite
            echo "🏗️ Building with Vite..."
            VITE_API_URL=https://dentarius.org/api npm run build
            echo "♻️ Restarting nginx..."
            sudo systemctl reload nginx
          else
            echo "⏭️ Frontend unchanged - Skipping frontend build"
          fi
          
          echo "✅ Deployment completed successfully!"
          echo "🌐 Site available at: https://dentarius.org"