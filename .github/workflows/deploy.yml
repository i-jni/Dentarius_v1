name: üöÄ Deploy Dentarius to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: üî• Smart Deploy
    runs-on: ubuntu-latest
    
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
    
    steps:
    # ==========================================
    # 1. CHECKOUT & SETUP
    # ==========================================
    - name: üì• Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Pour d√©tecter les changements
    
    - name: üîß Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    # ==========================================
    # 2. DETECT CHANGES
    # ==========================================
    - name: üîç Detect Changes
      id: changes
      run: |
        # V√©rifier les changements frontend
        if git diff --name-only HEAD~1 HEAD | grep -q '^frontend/'; then
          echo "frontend_changed=true" >> $GITHUB_OUTPUT
          echo "üì¶ Frontend changes detected"
        else
          echo "frontend_changed=false" >> $GITHUB_OUTPUT
          echo "‚úÖ No frontend changes"
        fi
        
        # V√©rifier les changements backend
        if git diff --name-only HEAD~1 HEAD | grep -q '^backend/'; then
          echo "backend_changed=true" >> $GITHUB_OUTPUT
          echo "üîß Backend changes detected"
        else
          echo "backend_changed=false" >> $GITHUB_OUTPUT
          echo "‚úÖ No backend changes"
        fi
    
    # ==========================================
    # 3. BUILD FRONTEND (si changements)
    # ==========================================
    - name: üì¶ Install Frontend Dependencies
      if: steps.changes.outputs.frontend_changed == 'true'
      working-directory: ./frontend
      run: |
        npm ci --prefer-offline --no-audit
    
    - name: üèóÔ∏è Build Frontend
      if: steps.changes.outputs.frontend_changed == 'true'
      working-directory: ./frontend
      run: |
        VITE_API_URL=https://dentarius.org/api npm run build
      timeout-minutes: 10
    
    - name: üìä Build size report
      if: steps.changes.outputs.frontend_changed == 'true'
      working-directory: ./frontend
      run: |
        echo "üì¶ Build completed!"
        du -sh dist/
        ls -lh dist/assets/ | head -10
    
    # ==========================================
    # 4. DEPLOY TO SERVER
    # ==========================================
    - name: üöÄ Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/Dentarius_v1
          
          echo "üîÑ Pulling latest code..."
          git fetch origin
          git reset --hard origin/main
          
          FRONTEND_CHANGED="${{ steps.changes.outputs.frontend_changed }}"
          BACKEND_CHANGED="${{ steps.changes.outputs.backend_changed }}"
          
          # Deploy Backend si changements
          if [ "$BACKEND_CHANGED" = "true" ]; then
            echo "üîß Deploying backend..."
            cd backend
            export $(cat .env.production | xargs)
            
            # Installation rapide avec timeout
            timeout 120s npm install --omit=dev --prefer-offline --no-audit || {
              echo "‚ö†Ô∏è npm install timeout, keeping existing node_modules"
            }
            
            pm2 restart dentarius-backend
            echo "‚úÖ Backend deployed"
            cd ..
          else
            echo "‚è≠Ô∏è Backend unchanged, skipping"
          fi
          
          # Pr√©parer frontend si changements
          if [ "$FRONTEND_CHANGED" = "true" ]; then
            echo "üé® Preparing frontend deployment..."
            cd frontend
            
            # Backup
            if [ -d "dist" ]; then
              rm -rf dist.backup
              mv dist dist.backup
            fi
            
            mkdir -p dist
            echo "‚úÖ Frontend prepared"
          else
            echo "‚è≠Ô∏è Frontend unchanged, skipping"
          fi
    
    # ==========================================
    # 5. TRANSFER FRONTEND (si changements)
    # ==========================================
    - name: üì§ Transfer Frontend Build
      if: steps.changes.outputs.frontend_changed == 'true'
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        source: "frontend/dist/*"
        target: "/var/www/Dentarius_v1/"
        strip_components: 1
        overwrite: true
    
    # ==========================================
    # 6. FINALIZE
    # ==========================================
    - name: ‚ôªÔ∏è Finalize Deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          FRONTEND_CHANGED="${{ steps.changes.outputs.frontend_changed }}"
          BACKEND_CHANGED="${{ steps.changes.outputs.backend_changed }}"
          
          # Reload Nginx si frontend chang√©
          if [ "$FRONTEND_CHANGED" = "true" ]; then
            echo "‚ôªÔ∏è Reloading Nginx..."
            sudo systemctl reload nginx
          fi
          
          echo ""
          echo "‚úÖ Deployment completed!"
          
          if [ "$FRONTEND_CHANGED" = "true" ]; then
            echo "   üì¶ Frontend: DEPLOYED"
          else
            echo "   üì¶ Frontend: NO CHANGES"
          fi
          
          if [ "$BACKEND_CHANGED" = "true" ]; then
            echo "   üîß Backend: DEPLOYED"
          else
            echo "   üîß Backend: NO CHANGES"
          fi
          
          echo ""
          echo "üåê Site: https://dentarius.org"